# We need a decent ubuntu dist
sudo: required
dist: xenial

# Modern cpp settings from
#  http://genbattle.bitbucket.org/blog/2016/01/17/c++-travis-ci/
language: cpp
matrix:
  include:
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - george-edison55-precise-backports
          packages:
            - g++-5
            - cmake
            - cmake-data
      env: COMPILER=g++-5

before_install:
  - pip install --user cpp-coveralls
  - sudo -H pip install --upgrade requests[security]
  - sudo apt purge cmake*
  - sudo apt-get install build-essential 
  - wget http://www.cmake.org/files/v3.5/cmake-3.5.1.tar.gz
  - tar xf cmake-3.5.1.tar.gz
  - cd cmake-3.5.1
  - ./configure
  - make
  - sudo make install
  - cd ..


install:
  - sudo apt-get install -y -qq lcov
  - sudo apt-get install build-essential unzip pkg-config git 
  - sudo apt-get install libjpeg-dev libpng-dev libtiff-dev libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libxvidcore-dev libx264-dev 
  - sudo apt-get install libgtk-3-dev 
  - sudo apt-get install libatlas-base-dev gfortran 
  - sudo apt-get install python3-dev
  - sudo apt -y install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
  - sudo apt -y install libgtk2.0-dev libtbb-dev qt5-default
  - sudo apt -y install libatlas-base-dev
  - sudo apt -y install libfaac-dev libmp3lame-dev libtheora-dev
  - sudo apt -y install libvorbis-dev libxvidcore-dev
  - sudo apt -y install libopencore-amrnb-dev libopencore-amrwb-dev
  - sudo apt -y install libavresample-dev
  - sudo apt -y install x264 v4l-utils

  - git clone https://github.com/opencv/opencv.git
  - cd opencv
  - git checkout 4.4.0
  - mkdir opencv_build
  - cd opencv_build
  - sudo cmake  -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D OPENCV_ENABLE_NONFREE=ON -D WITH_IPP=OFF -D WITH_TBB=ON -D WITH_V4L=ON -D WITH_QT=ON -D WITH_OPENGL=ON  ..
  - sudo make -j$(nproc)
  - sudo make install
  - sudo /bin/bash -c 'echo "/usr/local/lib" >> /etc/ld.so.conf.d/opencv.conf'
  - sudo ldconfig
  - cd ../..




script:
  - sudo bash script.sh
  - export CXX=$COMPILER;
  - mkdir main_build
  - cd main_build
  - cmake -DCOVERAGE=ON -DCMAKE_BUILD_TYPE=Debug ../
  - make
  - make code_coverage
  - test/cpp-test

after_success:
  - coveralls --root .. -E ".*external.*" -E ".*CMakeFiles.*" -E ".*test/.*.cpp.* -E ".*app/main.cpp"

notifications:
  email: false
